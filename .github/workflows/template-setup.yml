name: Template Repository Setup

on:
  create:
  push:
    branches: [ main ]
    paths: 
      - '.github/template-config.yml'

permissions:
  contents: write
  actions: write
  issues: write
  pull-requests: write

jobs:
  setup:
    if: github.repository != 'conorluddy/AgentStatic' && github.event.repository.is_template == false
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        
    - name: Check if template setup needed
      id: check-setup
      run: |
        if [ -f ".agentstatic-initialized" ]; then
          echo "setup_needed=false" >> $GITHUB_OUTPUT
        else
          echo "setup_needed=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Install dependencies
      if: steps.check-setup.outputs.setup_needed == 'true'
      run: npm ci
      
    - name: Run template setup script
      if: steps.check-setup.outputs.setup_needed == 'true'
      run: node scripts/setup-template.js
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        
    - name: Commit template setup changes
      if: steps.check-setup.outputs.setup_needed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "feat: Initialize AgentStatic template repository

        üöÄ Automated setup of AgentStatic template
        
        - Initialize site configuration
        - Set up sample content structure  
        - Configure build and deployment
        - Enable GitHub Pages

        Generated by AgentStatic Template Setup
        " || exit 0
        git push
        
    - name: Create initialization marker
      if: steps.check-setup.outputs.setup_needed == 'true'
      run: |
        echo "# AgentStatic Template Initialized" > .agentstatic-initialized
        echo "Repository: ${{ github.repository }}" >> .agentstatic-initialized
        echo "Initialized: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> .agentstatic-initialized
        echo "Version: $(cat package.json | grep '"version"' | sed 's/.*"version": "\(.*\)".*/\1/')" >> .agentstatic-initialized
        
    - name: Commit initialization marker
      if: steps.check-setup.outputs.setup_needed == 'true'
      run: |
        git add .agentstatic-initialized
        git commit -m "chore: Mark template as initialized"
        git push
        
    - name: Create welcome issue
      if: steps.check-setup.outputs.setup_needed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üöÄ Welcome to AgentStatic!',
            body: `# Welcome to your new AgentStatic site!

          Your AgentStatic template repository has been automatically configured and is ready to use.

          ## üèóÔ∏è What was set up for you:

          - ‚úÖ **Sample content structure** in the \`content/\` directory
          - ‚úÖ **Site configuration** with your repository details
          - ‚úÖ **GitHub Pages deployment** workflow
          - ‚úÖ **Development environment** with hot reload
          - ‚úÖ **Quality gates** with pre-commit hooks

          ## üöÄ Quick Start:

          1. **Clone your repository locally:**
             \`\`\`bash
             git clone https://github.com/${{ github.repository }}.git
             cd $(basename "${{ github.repository }}")
             \`\`\`

          2. **Install dependencies:**
             \`\`\`bash
             npm install
             \`\`\`

          3. **Start development server:**
             \`\`\`bash
             npm run dev
             \`\`\`

          4. **Build your site:**
             \`\`\`bash
             npm run build
             \`\`\`

          ## üìö Next Steps:

          - **Edit content**: Add your content in \`content/\` directory
          - **Customize design**: Modify partials in \`src/partials/\`
          - **Configure site**: Update \`site.config.json\`
          - **Deploy**: Push to main branch to deploy to GitHub Pages

          ## ü§ñ AI-Powered Features:

          AgentStatic includes powerful AI integration through MCP (Model Context Protocol):
          - **Smart content generation**
          - **Automated SEO optimization**
          - **Intelligent image processing**
          - **Natural language templating**

          ## üìñ Documentation:

          - [Getting Started Guide](https://github.com/conorluddy/AgentStatic/blob/main/docs/getting-started.md)
          - [Template Development](https://github.com/conorluddy/AgentStatic/blob/main/docs/templates.md)
          - [MCP Integration](https://github.com/conorluddy/AgentStatic/blob/main/docs/mcp-integration.md)

          ---

          üéâ **Happy building with AgentStatic!**

          *This issue was automatically created by the AgentStatic template setup. You can safely close it once you've reviewed the setup.*`
          })

    - name: Enable GitHub Pages with Actions deployment
      if: steps.check-setup.outputs.setup_needed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          try {
            // Create Pages site with Actions deployment (no source needed for workflow type)
            await github.rest.repos.createPagesSite({
              owner: context.repo.owner,
              repo: context.repo.repo,
              build_type: 'workflow'
            });
            console.log('‚úÖ GitHub Pages enabled with Actions deployment');
          } catch (error) {
            if (error.status === 409) {
              console.log('‚ÑπÔ∏è GitHub Pages already exists, updating to use Actions deployment');
              try {
                // Update existing Pages to use Actions deployment (no source for workflow type) 
                await github.rest.repos.updateInformationAboutPagesSite({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  build_type: 'workflow'
                });
                console.log('‚úÖ Updated Pages to use Actions deployment');
              } catch (updateError) {
                console.log('‚ö†Ô∏è Could not update Pages config:', updateError.message);
                console.log('Manual setup required: Go to Settings > Pages and select "GitHub Actions" as source');
              }
            } else {
              console.log('‚ùå Error enabling GitHub Pages:', error.message);
              console.log('Manual setup required: Enable Pages in repository settings');
            }
          }