name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'template/**'
      - 'src/**'
      - 'scripts/**'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'template/**'
      - 'src/**'
      - 'scripts/**'
  workflow_dispatch:
    inputs:
      deploy_demo:
        description: 'Deploy demo site'
        required: false
        default: 'true'
        type: boolean
      force_deploy:
        description: 'Force deployment even on PR'
        required: false
        default: 'false'
        type: boolean

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build the AgentStatic library and demo site
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type check
      run: npm run type-check
      
    - name: Build AgentStatic library
      run: npm run build
      
    - name: Build demo site
      run: npm run build:pages
      
    - name: Setup Pages configuration
      uses: actions/configure-pages@v4
      continue-on-error: true
      
    - name: Create Pages site if needed
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          try {
            await github.rest.repos.createPagesSite({
              owner: context.repo.owner,
              repo: context.repo.repo,
              build_type: 'workflow'
            });
            console.log('‚úÖ GitHub Pages site created with Actions deployment');
          } catch (error) {
            if (error.status === 409) {
              console.log('‚ÑπÔ∏è GitHub Pages site already exists');
              // Try to update to use Actions
              try {
                await github.rest.repos.updateInformationAboutPagesSite({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  build_type: 'workflow'
                });
                console.log('‚úÖ Updated Pages to use GitHub Actions deployment');
              } catch (updateError) {
                console.log('‚ö†Ô∏è Could not update Pages config:', updateError.message);
              }
            } else {
              console.log('‚ùå Error configuring Pages:', error.message);
            }
          }
          
    - name: Verify build output
      run: |
        echo "üì¶ Build output verification:"
        ls -la pages-dist/
        echo ""
        echo "üìÑ Generated files:"
        find pages-dist -type f -exec ls -lh {} \; | awk '{print "  " $5 " " $9}'
        echo ""
        echo "üîç Index.html preview (first 10 lines):"
        head -10 pages-dist/index.html || echo "No index.html found"
        
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './pages-dist'

  # Deploy to GitHub Pages (only on main branch or forced)
  deploy:
    if: (github.ref == 'refs/heads/main' && github.event_name != 'pull_request') || github.event.inputs.force_deploy == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Deployment success notification
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          const deploymentUrl = '${{ steps.deployment.outputs.page_url }}';
          
          // Create a deployment status comment if this is from a PR
          if (context.eventName === 'pull_request') {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: `üöÄ **Demo Site Deployed Successfully!**\n\nüìç **Preview URL**: ${deploymentUrl}\n\n‚úÖ Your AgentStatic demo site is now live and ready for preview.`
            });
          }
          
          console.log(`üéâ AgentStatic demo site deployed successfully to: ${deploymentUrl}`);
          
    - name: Deployment failure notification
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          console.log('‚ùå GitHub Pages deployment failed');
          
          if (context.eventName === 'pull_request') {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: `‚ùå **Demo Site Deployment Failed**\n\nThe GitHub Pages deployment encountered an error. Please check the [workflow logs](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.`
            });
          }